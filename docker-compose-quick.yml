#
# Copyright (c) 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3'

services:
  hbase:
    image: "${DOCKER_REGISTRY}${COMPOSE_PROJECT_NAME}/hbase"
    ports:
      - 2181:2181
      - 9090:9090
      - 60000:60000
      - 60020:60020
    volumes:
      - ./data/hbase-logs:/opt/hbase/logs
  postgres:
    image: "postgres:9.4.10"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./oisp-frontend/public-interface/scripts/database:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  kafka:
    image: "${DOCKER_REGISTRY}${COMPOSE_PROJECT_NAME}/kafka"
    ports:
      - 9092:9092
    environment:
      - ZK_CONNECT=hbase:2181
    depends_on:
      - hbase
    environment:
      - ADVERTISED_HOST=${HOST_IP_ADDRESS}
      - ADVERTISED_PORT=9092
      - AUTO_CREATE_TOPICS=true
  gearpump:
    image: "${DOCKER_REGISTRY}${COMPOSE_PROJECT_NAME}/gearpump"
    ports:
      - 8090:8090
    depends_on:
      - nginx
      - hbase
  redis:
    image: redis:3.0
    volumes:
      - ./data/redis:/data
    ports:
      - 6379:6379
  rules-engine-build:
    image: "${DOCKER_REGISTRY}${COMPOSE_PROJECT_NAME}/rules-engine-build"
    depends_on:
      - gearpump
      - nginx
      - hbase
      - kafka
      - frontend
    working_dir: /app
    environment:
      - VCAP_SERVICES=${VCAP_SERVICES}
      - VCAP_APPLICATION=${VCAP_APPLICATION}
    command: ./wait-for-it.sh gearpump:8090 -t 300 -- ./wait-for-it.sh nginx:80 -t 300 -- ./wait-for-it.sh hbase:2181 -t 300 -- ./wait-for-it.sh kafka:9092 -t 300 -- ./wait-for-it.sh frontend:4001 -t 300 -- ./local-push-to-gearpump.sh
  nginx:
    image: "${DOCKER_REGISTRY}${COMPOSE_PROJECT_NAME}/nginx"
    ports:
      - 80:80
      - 443:443
    depends_on:
      - websocket-server
      - frontend
    volumes:
      - ./data/keys/ssl:/etc/ssl
      - ./oisp-frontend/public-interface:/app
  websocket-server:
    image: "${DOCKER_REGISTRY}${COMPOSE_PROJECT_NAME}/websocket-server"
    ports:
      - 5000:5000
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./oisp-websocket-server:/app
      - ./data/keys:/app/keys
    working_dir: /app
    environment:
      - VCAP_SERVICES=${VCAP_SERVICES}
      - VCAP_APPLICATION=${VCAP_APPLICATION}
      - TEST=${TEST}
      - NODE_ENV=local
    command: ./wait-for-it.sh postgres:5432 -t 300 -- ./wait-for-it.sh kafka:9092 -t 300 -- ./scripts/docker-start.sh
  frontend:
    image: "${DOCKER_REGISTRY}${COMPOSE_PROJECT_NAME}/frontend"
    ports:
      - 4001:4001

    depends_on:
      - postgres
      - redis
      - websocket-server
      - backend
      - kafka
    command: ./wait-for-it.sh postgres:5432 -t 300 -- ./wait-for-it.sh redis:6379 -t 300  -- ./wait-for-it.sh kafka:9092 -t 300 -- ./scripts/wait-for-heartbeat.sh backend websocket-server -- ./scripts/docker-start.sh
    volumes:
      - ./oisp-frontend/public-interface:/app
      - ./data/keys:/app/keys
    environment:
      - VCAP_SERVICES=${VCAP_SERVICES}
      - VCAP_APPLICATION=${VCAP_APPLICATION}
      - TEST=${TEST}
      - NODE_ENV=local
  backend:
    image: "${DOCKER_REGISTRY}${COMPOSE_PROJECT_NAME}/backend"
    ports:
      - 8080:8080
    depends_on:
      - hbase
      - kafka
    command: ./wait-for-it.sh hbase:2181 -t 300 -- ./wait-for-it.sh kafka:9092 -t 300 -- make runjar
    working_dir: /app
    environment:
      - VCAP_SERVICES=${VCAP_SERVICES}
      - VCAP_APPLICATION=${VCAP_APPLICATION}
