apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
spec:
  ports:
  - port: 8080
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  replicas: {{ .Values.numberReplicas.backend }}
  selector:
    matchLabels:
      app: backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: oisp/backend:latest
        ports:
        - containerPort: 8080
        args:
        - ./wait-for-it.sh
        - hbase-master:9090
        - -t
        - "300"
        - --
        - make
        - runjar
        env:
        - name: OISP_BACKEND_CONFIG
          valueFrom:
            configMapKeyRef:
              key: backend
              name: oisp-config
        - name: OISP_KAFKA_CONFIG
          valueFrom:
            configMapKeyRef:
              key: kafka
              name: oisp-config
        - name: OISP_ZOOKEEPER_CONFIG
          valueFrom:
            configMapKeyRef:
              key: zookeeper
              name: oisp-config
        - name: OISP_KERBEROS_CONFIG
          valueFrom:
            configMapKeyRef:
              key: kerberos
              name: oisp-config
        - name: OISP_HBASE_CONFIG
          valueFrom:
            configMapKeyRef:
              key: hbase
              name: oisp-config
        - name: OISP_HADOOP_PROPERTIES
          valueFrom:
            configMapKeyRef:
              key: hadoop
              name: oisp-config
        workingDir: /app
        readinessProbe:
          tcpSocket:
            port: 8080
        resources:
          requests:
            cpu: "1"
      imagePullSecrets:
      - name: dockercred
