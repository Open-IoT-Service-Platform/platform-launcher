# The following two should always be changed together!
imagePrefix: oisp
keycloakImageVar: &keycloakImage "oisp/keycloak"

# Credentials to pull images from docker registry
imageCredentials:
    registry: docker.io
    username: invalid_username
    password: invalid_password

smtp:
    host: debugger
    port: 2525
    username: username
    password: password

imap:
    host: imap.ethereal.email
    port: 993
    username: imaptest@streammyiot.com
    password: P@ssword123!

numberReplicas:
    frontend: 1
    backend: 1
    debugger: 1
    minio: 4

backup:
  bucket: backup

certmanager:
  secret: selfsigned-cert-tls
  issuer: letsencrypt-self

emqx:
  replicaCount: 3
  fullnameOverride: emqx
  emqxConfig:
    EMQX_AUTH__HTTP__ACL_REQ_URL: http://mqtt-gateway:3025/acl
    EMQX_AUTH__HTTP__ACL_REQ__METHOD: get
    EMQX_AUTH__HTTP__ACL_REQ__PARAMS: access=%A,username=%u,topic=%t
    EMQX_AUTH__HTTP__AUTH_REQ_URL: http://mqtt-gateway:3025/auth
    EMQX_AUTH__HTTP__AUTH_REQ__METHOD: get
    EMQX_AUTH__HTTP__AUTH_REQ__PARAMS: username=%u,password=%P
    EMQX_CLUSTER__K8S__ADDRESS_TYPE: hostname
    EMQX_CLUSTER__K8S__APISERVER: https://kubernetes.default.svc:443
    EMQX_CLUSTER__K8S__SUFFIX: svc.cluster.local
    EMQX_CLUSTER__K8S__SERVICE_NAME: emqx-headless
    EMQX_CLUSTER__K8S__APP_NAME: emqx
    EMQX_LOG__LEVEL: warning
    EMQX_LISTENER__SSL__EXTERNAL__CERTFILE: etc/certs/server.cert
    EMQX_LISTENER__SSL__EXTERNAL__KEYFILE: etc/certs/server.key
    EMQX_LISTENER__SSL__EXTERNAL__VERIFY: verify_none
    EMQX_NAME: emqx
  image:
    pullSecrets:
    - dockercred
  initContainers:
  - name: wait-for-mqtt-auth-service
    image: oisp/wait-for-it:latest
    args: ["mqtt-gateway:3025", "--", "echo", "mqtt auth service is up"]

emqxtest:
  replicaCount: 1
  fullnameOverride: emqx
  emqxLoadedPlugins: '{emqx_auth_http, true}. {emqx_management, true}.'
  emqxConfig:
    EMQX_AUTH__HTTP__ACL_REQ__URL: http://mqtt-gateway:3025/acl
    EMQX_AUTH__HTTP__ACL_REQ__METHOD: get
    EMQX_AUTH__HTTP__ACL_REQ__PARAMS: access=%A,username=%u,topic=%t
    EMQX_AUTH__HTTP__AUTH_REQ__URL: http://mqtt-gateway:3025/auth
    EMQX_AUTH__HTTP__AUTH_REQ__METHOD: get
    EMQX_AUTH__HTTP__AUTH_REQ__PARAMS: username=%u,password=%P
    EMQX_CLUSTER__K8S__ADDRESS_TYPE: hostname
    EMQX_CLUSTER__K8S__APISERVER: https://kubernetes.default.svc:443
    EMQX_CLUSTER__K8S__SUFFIX: svc.cluster.local
    EMQX_CLUSTER__K8S__SERVICE_NAME: emqx-headless
    EMQX_CLUSTER__K8S__APP_NAME: emqx
    EMQX_LOG__LEVEL: info
    EMQX_LISTENER__SSL__EXTERNAL__CERTFILE: etc/certs/server.cert
    EMQX_LISTENER__SSL__EXTERNAL__KEYFILE: etc/certs/server.key
    EMQX_LISTENER__SSL__EXTERNAL__VERIFY: verify_none
    EMQX_NAME: emqx
  image:
    pullSecrets:
    - dockercred
  initContainers:
  - name: wait-for-mqtt-auth-service
    image: oisp/wait-for-it:latest
    args: ["mqtt-gateway:3025", "--", "echo", "mqtt auth service is up"]


kafka:
  service: my-cluster-kafka-bootstrap.iff.svc.cluster.local:9092
  fullBrokerList: my-cluster-kafka-bootstrap.iff.svc.cluster.local:9092
  metricsPartitions: 1
  metricsTopic: "metrics"
  replicationFactor: 1
  requestTimeout: 20000
  maxRetryTime: 5000
  retries: 10
  maxPayloadSize: "20000000"

kafkaBridge:
  kairosdb:
    repliacCount: 1
    listenTopic: "iff.ngsild.attributes"


zookeeper:
  namespace: zookeeper
  name: zookeeper
  servers: "oisp-zookeeper-headless"
  readyCheck: "oisp-zookeeper-headless:2181"

backend:
  defaultTsdbBackend: "kairosDB"
  objectStoreName: "minio"
  tsdbUri: "kairosdb"
  tsdbPort: 8080

# This used to have a host field, which had to be removed from values.yaml
# If you change cluster, you also have to update the wait-for-it in kairos-db.yaml
# and in oisp-config.yaml
cassandra:
  name: cassandra
  cluster: "oisp"
  rack: rack1
  port: 9042
  replication: "{'class': 'SimpleStrategy','replication_factor' : 2}"
  nodes: 3
  disk: 100Gi
  memory: 1Gi

grafana:
  admin: grafana
  password: intel123

mqtt:
  broker:
    username: username
    password: password
    url: emqx-headless
    localport: 1883
  gateway:
    port: 3025
    url: mqtt-gateway
  certs:
    cafile: "server.cert"
    keyfile: "server.key"
    certfile: "server.cert"
    rootpath: "/opt/emqx/etc/certs"

# Hosts used for Ingress configuration
hosts:
    frontend: latest.oisp.info

systemuser:
  username: gateway@intel.com
  password: 7d501829lhbl1or0bb1784462c97bcad6

stolon:
  pgSuperuserName: superuser
  pgSuperuserPassword: supersecret

postgres:
  pgSuperuserName: superuser
  pgSuperuserPassword: supersecret
  username: oisp_user
  password: supersecret
  clustername: acid-oisp
  clustersuffix: postgresql.acid.zalan.do
  team: acid

# Docker image tag
tag: latest
use_local_registry: false

# Enable jaeger tracing
jaeger_tracing: false

# Sets resource limits lower to test locally
# or on smaller cluster when set to true
# Note: make sure that less_resources and production always containe inverted Values
# why: Because selection of subcharts in Helm does not work with "false" values (sad, but true)
less_resources: true
production: false