apiVersion: v1
kind: Service
metadata:
  labels:
    app: kairosdb
  name: kairosdb
spec:
  ports:
  - port: 8080
  selector:
    app: kairosdb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kairosdb
  labels:
    app: kairosdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kairosdb
  template:
    metadata:
      labels:
        app: kairosdb
    spec:
      containers:
      - name: kairosdb
        {{ if .Values.use_local_registry }}
        image: registry.local:5000/oisp/kairosdb:{{ .Values.tag }}
        {{ else }}
        image: {{ .Values.imagePrefix }}/kairosdb:{{ .Values.tag }}
        {{ end }}
        ports:
        - containerPort: 8080
        args:
        - /opt/wait-for-it.sh
        - "cassandra-{{ .Values.cassandra.cluster}}-{{ .Release.Namespace }}-nodes.cassandra.svc.cluster.local:{{ .Values.cassandra.port}}"
        - -t
        - "300000"
        - --
        - /opt/kairosdb-startup.sh
        livenessProbe:
          httpGet:
            path: /api/v1/health/check
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
        startupProbe:
          httpGet:
            path: /api/v1/health/check
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        env:
        - name: OISP_KAIROSDB_CONFIG
          valueFrom:
            configMapKeyRef:
              key: kairosdb-properties
              name: oisp-config
        - name: OISP_TSDB_PROPERTIES
          valueFrom:
            configMapKeyRef:
              key: kairosdb-properties
              name: oisp-config
        workingDir: /app
        resources:
          {{ if .Values.less_resources }}
          requests:
            cpu: 50m
          {{ else }}
          limits:
            cpu: 500m
          requests:
            cpu: 500m
          {{ end }}
      imagePullSecrets:
      - name: dockercred
