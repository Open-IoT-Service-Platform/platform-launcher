apiVersion: v1
data:
  postgres.database: oisp
  postgres.username: oisp

  frontend: |
    {
    "postgresConfig": "@@OISP_POSTGRES_CONFIG",
    "redisConfig": "@@OISP_REDIS_CONFIG",
    "kafkaConfig": "@@OISP_KAFKA_CONFIG",
    "smtpConfig": "@@OISP_SMTP_CONFIG",
    "dashboardSecurityConfig": "@@OISP_DASHBOARDSECURITY_CONFIG",
    "backendHostConfig": "@@OISP_BACKENDHOST_CONFIG",
    "websocketUserConfig": "@@OISP_WEBSOCKETUSER_CONFIG",
    "mailConfig": "@@OISP_MAIL_CONFIG",
    "ruleEngineConfig": "@@OISP_RULEENGINE_CONFIG",
    "gatewayConfig": "@@OISP_GATEWAY_CONFIG",
    "jaegerTracing": {{ .Values.jaeger_tracing }},
    "grafanaConfig": "@@OISP_GRAFANA_CONFIG"
    }
  websocket-server: |
    {
    "postgresConfig": "@@OISP_POSTGRES_CONFIG",
    "websocketUserConfig": "@@OISP_WEBSOCKETUSER_CONFIG",
    "kafkaConfig": "@@OISP_KAFKA_CONFIG",
    "uri": ""
    }
  backend: |
    {
    "tsdbName": "openTSDB",
    "objectStoreName": "minio",
    "kafkaConfig": "@@OISP_KAFKA_CONFIG",
    "tsdbProperties": "%%OISP_TSDB_PROPERTIES",
    "zookeeperConfig": "@@OISP_ZOOKEEPER_CONFIG",
    "kerberosConfig": "@@OISP_KERBEROS_CONFIG",
    "hbaseConfig": "@@OISP_HBASE_CONFIG",
    "jaegerConfig": "@@OISP_BACKEND_JAEGER_CONFIG",
    "objectStoreProperties": "%%OISP_OBJECT_STORE_MINIO_PROPERTIES"
    }
  backend-jaeger: |
    {
    "serviceName": "backend",
    "agentHost": "localhost",
    "agentPort": 6831,
    "logSpans": true,
    "samplerType": "probabilistic",
    "samplerParam": 0.1,
    "tracing": {{ .Values.jaeger_tracing }}
    }
  kafka: |
    {
    "uri": "kafka:9092",
    "partitions": 1,
    "replication": 1,
    "timeoutMs": 10000,
    "topicsObservations": "metrics",
    "topicsRuleEngine": "rules-update",
    "topicsHeartbeatName": "heartbeat",
    "topicsHeartbeatInterval": 5000
    }
  zookeeper: |
    {
    "zkCluster": "zookeeper:2181"
    }
  kerberos: |
    {
    "kdc": "localhost",
    "kpassword": "pass",
    "krealm": "realm",
    "kuser": "user"
    }
  hbase: |
    {
    "hadoopProperties": "%%OISP_HADOOP_PROPERTIES"
    }
  hadoop: |
    {
    "hadoop.security.authentication": "simple",
    "hadoop.security.authorization": "false",
    "hbase.security.authentication": "simple",
    "ha.zookeeper.quorum": "zookeeper",
    "hbase.zookeeper.property.clientPort": "2181",
    "hbase.zookeeper.quorum": "zookeeper",
    "hbase.rootdir": "/hbase"
    }
  postgres: |
    {
    "dbname": "oisp",
    "hostname": "postgres-ro",
    "writeHostname": "postgres",
    "port": "5432",
    "username": "oisp_user",
    "password": "supersecret"
    }
  redis: |
    {
    "hostname": "redis",
    "port": "6379",
    "password": ""
    }
# TODO fix this, plaintext password
  smtp: |
    {
    "host": "{{ .Values.smtp.host }}",
    "port": "{{ .Values.smtp.port }}",
    "protocol": "smtp",
    "username": "{{ .Values.smtp.username }}",
    "password": "{{ .Values.smtp.password }}"
    }
  dashboard-security: |
    {
    "captcha_test_code": "s09ef48213s8fe8fw8rwer5489wr8wd5",
    "interaction_token_permision_key": "password",
    "private_pem_path": "./keys/private.pem",
    "public_pem_path": "./keys/public.pem"
    }
  gateway: |
    {
    "password": "{{ .Values.systemuser.username }}",
    "username": "{{ .Values.systemuser.password }}"
    }
  backend-host: |
    {
    "deviceMeasurementTableName": "LOCAL-AA-BACKEND_DEVICE_MEASUREMENT",
    "host": "http://backend:8080"
    }
  mail: |
    {
    "sender": "test.sender@streammyiot.com"
    }
  rule-engine: |
    {
    "uri": "gearpump:8090",
    "password": "7d501829lhbl1or0bb1784462c97bcad6",
    "username": "rule_engine@intel.com",
    "gearpumpUsername": "admin",
    "gearpumpPassword": "admin",
    "frontendUri": "dashboard:4001",
    "hbaseConfig": "@@OISP_HBASE_CONFIG",
    "kafkaConfig": "@@OISP_KAFKA_CONFIG",
    "zookeeperConfig": "@@OISP_ZOOKEEPER_CONFIG"
    }
  websocket-user: |
    {
    "password": "AgjY7H3eXztyA6AmNjI2rte446gdttgattwRRF61",
    "username": "api_actuator"
    }
  opentsdb-config: |
    {
    "port": 4242
    }
  opentsdb-properties: |
    {
    "uri": "opentsdb",
    "port": "4242"
    }
  minio: |
    {
    "endPoint": "minio",
    "port": "9000",
    "useSSL": "false",
    "accessKey": "{{ .Values.minio.accesskey }}",
    "secretKey": "{{ .Values.minio.secretkey }}"
    }
  grafana: |
    {
    "port": "3000",
    "adminUser": "{{ .Values.grafana.admin }}",
    "adminPassword": "{{ .Values.grafana.password }}",
    "dataSourceHost": "opentsdb",
    "dataSourcePort": "4242"
    }

  mqtt-gateway: |
    {
    "mqttBrokerUrl": "localhost",
    "mqttBrokerPort": "8883",
    "mqttBrokerUsername": "{{ .Values.mqtt.broker.username }}",
    "mqttBrokerPassword": "{{ .Values.mqtt.broker.password }}",
    "frontendUri": "dashboard",
    "frontendPort": "4001",
    "frontendSystemUser": "{{ .Values.systemuser.username }}",
    "frontendSystemPassword": "{{ .Values.systemuser.password }}",
    "redisConf": "@@OISP_REDIS_CONFIG",
    "aesKey": "/app/keys/mqtt/mqtt_gw_secret.key"
    }

  mqtt-broker: |
    {
    "redisConf": "@@OISP_REDIS_CONFIG",
    "jwtPubKey": "/app/keys/public.pem",
    "mqttBrokerUserName": "{{ .Values.mqtt.broker.username }}",
    "mqttBrokerPassword": "{{ .Values.mqtt.broker.password }}",
    "mqttBrokerPort": "8883",
    "aesKey": "/app/keys/mqtt/mqtt_gw_secret.key",
    "cafile": "/app/keys/ssl/server.cert",
    "keyfile": "/app/keys/ssl/server.key",
    "certfile": "/app/keys/ssl/server.cert"
    }

kind: ConfigMap
metadata:
  creationTimestamp: null
  name: oisp-config
  selfLink: /api/v1/namespaces/cloudfest-1/configmaps/oisp-config
