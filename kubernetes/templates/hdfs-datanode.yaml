apiVersion: v1
kind: Service
metadata:
  name: hdfs-datanode
  labels:
    app: hdfs-datanode
spec:
  ports:
  - name: "8080"
    port: 8080
  selector:
    app: hdfs-datanode
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: hdfs-datanode
  name: hdfs-datanode
spec:
  serviceName: hdfs-datanode
  replicas: {{ .Values.hbaseScale.dataNodes }}
  selector:
    matchLabels:
      app: hdfs-datanode
  template:
    metadata:
      labels:
        app: hdfs-datanode
    spec:
      containers:
      - image: singularities/hadoop
        name: hdfs-namenode
        args: ["start-hadoop", "datanode", "hdfs-namenode"]
        resources:
          {{ if .Values.less_resources }}
          requests:
            cpu: 50m
          {{ else }}
          limits:
            memory: 500M
            cpu: 1
          requests:
            memory: 500M
            cpu: 1
          {{ end }}
        env:
          - name: HDFS_USER
            value: root
        volumeMounts:
        - mountPath: /opt/hdfs
          name: hdfs-datanode-data
        - name: hdfs-site
          mountPath: /usr/local/hadoop-2.8.3/etc/hadoop/hdfs-site.xml
          subPath: hdfs-site.xml
      volumes:
      - name: hdfs-datanode-data
        persistentVolumeClaim:
          claimName: hdfs-datanode-data
      - name: hdfs-site
        configMap:
          name: hdfs-config
  volumeClaimTemplates:
  - metadata:
      name: hdfs-datanode-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
