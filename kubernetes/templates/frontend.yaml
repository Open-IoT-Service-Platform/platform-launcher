apiVersion: v1

kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  ports:
  - port: 4001
    name: "frontend"
  - port: 4002
    name: "4002"
  - port: 4003
    name: "4003"
  - port: 4004
    name: "4004"
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  replicas: {{ .Values.numberReplicas.frontend }}
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        {{ if .Values.use_local_registry }}
        image: registry.local:5000/oisp/frontend:{{ .Values.tag }}
        {{ else }}
        image: oisp/frontend:{{ .Values.tag }}
        {{ end }}
        ports:
        - containerPort: 4001
        args:
        - ./wait-for-it.sh
        - postgres:5432
        - -t
        - "300000"
        - -s
        - --
        - ./wait-for-it.sh
        - redis:6379
        - -t
        - "300000"
        - -s
        - --
        - ./wait-for-it.sh
        - {{ .Values.kafka.service}}
        - -t
        - "300000"
        - -s
        - --
        - ./wait-for-it.sh
        - keycloak-http:4080
        - -t
        - "300000"
        - -s
        - --
        - ./scripts/docker-start.sh
        - "--disable-rate-limits"
        env:
        {{ if .Values.production }}
        - name: NODE_ENV
          value: production
        {{ else }}
        - name: NODE_ENV
          value: local
        {{ end }}
        - name: OISP_FRONTEND_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: frontend
        - name: OISP_POSTGRES_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: postgres
        - name: OISP_REDIS_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: redis
        - name: OISP_KAFKA_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: kafka
        - name: OISP_SMTP_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: smtp
        - name: OISP_FRONTENDSECURITY_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: frontend-security
        - name: OISP_KEYCLOAK_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: keycloak
        - name: OISP_GATEWAY_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: gateway
        - name: OISP_BACKENDHOST_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: backend-host
        - name: OISP_WEBSOCKETUSER_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: websocket-user
        - name: OISP_RULEENGINE_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: rule-engine
        - name: OISP_MAIL_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: mail
        - name: OISP_GRAFANA_CONFIG
          valueFrom:
            configMapKeyRef:
              name: oisp-config
              key: grafana
        volumeMounts:
        - mountPath: /app/keys
          name: jwt-keys
          readOnly: true
        livenessProbe:
          httpGet:
            path: /v1/api/health
            port: 4001
          initialDelaySeconds: 200
        readinessProbe:
          httpGet:
            path: /v1/api/health
            port: 4001
        resources:
          {{ if .Values.less_resources }}
          requests:
            cpu: 50m
          {{ else }}
          limits:
            cpu: 500m
          requests:
            cpu: 500m
          {{ end }}
      {{ if .Values.jaeger_tracing }}
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:1.6.0
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
          protocol: TCP
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        command:
          - "/go/bin/agent-linux"
          - "--collector.host-port=jaeger-collector:14267"
      {{ end }}
      imagePullSecrets:
        - name: dockercred
      volumes:
      - name: jwt-keys
        secret:
          defaultMode: 420
          items:
          - key: jwt.publickey
            path: public.pem
          - key: jwt.privatekey
            path: private.pem
          secretName: oisp-secrets
