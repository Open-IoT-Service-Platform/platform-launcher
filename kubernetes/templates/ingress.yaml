apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-web
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress.class }}
    {{ if .Values.production }}
    cert-manager.io/cluster-issuer: {{ .Values.certmanager.issuer }}
    {{ else }}
    cert-manager.io/cluster-issuer: letsencrypt-self
    {{ end }}
spec:
  defaultBackend:
    service:
      name: frontend
      port:
        number: 4001
  tls:
  - hosts:
      - {{ .Values.hosts.frontend }}
    {{ if .Values.production}}
    secretName: {{ .Values.certmanager.secret }}
    {{ else }}
    secretName: selfsigned-cert-tls
    {{ end }}
  rules:
  - host: {{ .Values.hosts.frontend }}
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: frontend
            port:
              number: 4001
  - host: {{ .Values.hosts.frontend }}
    http:
        paths:
        - pathType: Prefix
          path: /ui/grafana
          backend:
            service:
              name: frontend
              port:
                number: 4002
  - host: {{ .Values.hosts.frontend }}
    http:
      paths:
      - pathType: Prefix
        path: /keycloak
        backend:
          service:
            name: keycloak-http
            port:
              number: 4080
  - host: {{ .Values.hosts.streamer }}
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: streamer
            port:
              number: 9000
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tsdb-web
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress.class }}
    {{ if .Values.production }}
    cert-manager.io/cluster-issuer: {{ .Values.certmanager.issuer }}
    {{ else }}
    cert-manager.io/cluster-issuer: letsencrypt-self
    {{ end }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  tls:
  - hosts:
    {{ if .Values.production }}
    - {{ .Values.hosts.frontend }}
    {{ else }}
    - frontend
    {{ end }}
    {{ if .Values.production}}
    secretName: {{ .Values.certmanager.secret }}
    {{ else }}
    secretName: selfsigned-cert-tls
    {{ end }}
  rules:
  - host: {{ .Values.hosts.frontend }}
    http:
      paths:
      - pathType: Prefix
        path: /tsdb(/|$)(.*)
        backend:
          service:
            name: frontend
            port:
              number: 4003
