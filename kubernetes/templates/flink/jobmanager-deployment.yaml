apiVersion: apps/v1
kind: Deployment
metadata:
  name: flink-jobmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flink
      component: jobmanager
  template:
    metadata:
      labels:
        app: flink
        component: jobmanager
    spec:
      serviceAccountName: flink-jobmanager
      initContainers:
      - name: create-checkpointing-dir
        image: {{ printf "%s/%s" .Values.imageCredentials.registry .Values.minio.mcImage }}
        env:
        - name: MC_HOST_oisp
          {{- $secret := (lookup "v1" "Secret" .Release.Namespace "minio-user") -}}
          {{- if $secret }}
          value: {{ printf "http://%s:%s@%s.%s.svc.cluster.local:%s" .Values.minio.userAccessKey ($secret.data.CONSOLE_SECRET_KEY | b64dec) .Values.minio.endpointPrefix .Release.Namespace .Values.minio.localPort }}
          {{- else }}
          value: {{ printf "http://%s:%s@%s.%s.svc.cluster.local:%s" .Values.minio.userAccessKey .Values.minio.userSecretKey .Values.minio.endpointPrefix .Release.Namespace .Values.minio.localPort }}
          {{- end }}
        command: ["/bin/bash", "-c", "mc mb -p oisp/{{ .Values.flink.highAvailability.bucket }}"]
      containers:
      - name: jobmanager
        image: flink:{{ .Values.flink.version }}
        workingDir: /opt/flink
        command: ["/bin/bash", "-c", "mkdir -p /opt/flink/plugins/s3; \
          cp /opt/flink/opt/flink-s3-fs-hadoop-*.jar /opt/flink/plugins/s3 ; \
          $FLINK_HOME/bin/jobmanager.sh start-foreground; \
          "]
        ports:
        - containerPort: 6123
          name: rpc
        - containerPort: 6124
          name: blob
        - containerPort: {{ .Values.flink.restPort }}
          name: ui
        livenessProbe:
          tcpSocket:
            port: 6123
          initialDelaySeconds: 30
          periodSeconds: 60
        volumeMounts:
        - name: flink-config-volume
          mountPath: /opt/flink/conf
        securityContext:
          runAsUser: 9999  # refers to user _flink_ from official flink image, change if necessary
      - name: sql-gateway
         {{ if .Values.use_local_registry }}
        image: k3d-oisp.localhost:12345/{{ .Values.imagePrefix }}/simple-flink-sql-gateway:{{ .Values.tag }}
        {{ else }}
        image: {{ .Values.imagePrefix }}/simple-flink-sql-gateway:{{ .Values.tag }}
        {{ end }}
        workingDir: /opt/gateway
        command: ["/bin/bash", "-c", "mkdir -p /opt/flink/plugins/s3; \
          cp /opt/flink/opt/flink-s3-fs-hadoop-*.jar /opt/flink/plugins/s3 ; \
          nodejs gateway.js"]
        env:
        - name: SIMPLE_FLINK_SQL_GATEWAY_PORT
          value: {{ .Values.flink.sqlClientPort | quote }}
        - name: DEBUG
          value: express:*
        ports:
        - containerPort: {{ .Values.flink.sqlClientPort }}
          name: rest
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.flink.sqlClientPort }}
          initialDelaySeconds: 30
          periodSeconds: 3
        volumeMounts:
        - name: flink-config-volume
          mountPath: /opt/flink/conf
        securityContext:
          runAsUser: 9999  # refers to user _flink_ from official flink image, change if necessary
      volumes:
      - name: flink-config-volume
        configMap:
          name: flink-config
          items:
          - key: flink-conf.yaml
            path: flink-conf.yaml
          - key: log4j.properties
            path: log4j-console.properties
          - key: sql-client-defaults.yaml
            path: sql-client-defaults.yaml
      imagePullSecrets:
        - name: dockercred
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flink-jobmanager
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: flink-jobmanager
rules:
 - apiGroups: [""] # "" indicates the core API group
   resources: ["configmaps"]
   verbs: ["create", "edit", "delete", "watch", "get", "list", "patch", "update"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: flink-jobmanager
subjects:
  - kind: ServiceAccount
    name: flink-jobmanager
roleRef:
  kind: Role
  name: flink-jobmanager
  apiGroup: rbac.authorization.k8s.io
