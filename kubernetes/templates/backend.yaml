apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
spec:
  ports:
  - port: 8080
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: "oisp-config"
  name: backend
  labels:
    app: backend
spec:
  replicas: {{ .Values.numberReplicas.backend }}
  selector:
    matchLabels:
      app: backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-kairos
        {{ if .Values.use_local_registry }}
        image: k3d-oisp.localhost:12345/{{ .Values.imagePrefix }}/wait-for-it:{{ .Values.tag }}
        {{ else }}
        image: {{ .Values.imagePrefix }}/wait-for-it:{{ .Values.tag }}
        {{ end }}
        args: ["kairosdb:8080", "--", "echo", "kariosds is up"]
      - name: wait-for-kafka
        {{ if .Values.use_local_registry }}
        image: k3d-oisp.localhost:12345/{{ .Values.imagePrefix }}/wait-for-it:{{ .Values.tag }}
        {{ else }}
        image: {{ .Values.imagePrefix }}/wait-for-it:{{ .Values.tag }}
        {{ end }}
        args: [{{ .Values.kafka.service }}, "--", "echo", "kafka is up"]
      containers:
      - name: backend
        {{ if .Values.use_local_registry }}
        image: k3d-oisp.localhost:12345/{{ .Values.imagePrefix }}/backend:{{ .Values.tag }}
        {{ else }}
        image: {{ .Values.imagePrefix }}/backend:{{ .Values.tag }}
        {{ end }}
        ports:
        - containerPort: 8080
        command: ["make"]
        args: ["runjar"]
        env:
        - name: OISP_BACKEND_CONFIG
          valueFrom:
            configMapKeyRef:
              key: backend
              name: oisp-config
        - name: OISP_BACKEND_JAEGER_CONFIG
          valueFrom:
            configMapKeyRef:
              key: backend-jaeger
              name: oisp-config
        - name: OISP_KAFKA_CONFIG
          valueFrom:
            configMapKeyRef:
              key: kafka
              name: oisp-config
        - name: OISP_ZOOKEEPER_CONFIG
          valueFrom:
            configMapKeyRef:
              key: zookeeper
              name: oisp-config
        - name: OISP_TSDB_PROPERTIES
          valueFrom:
            configMapKeyRef:
              key: kairosdb-properties
              name: oisp-config
        - name: OISP_OBJECT_STORE_MINIO_PROPERTIES
          valueFrom:
            configMapKeyRef:
              key: minio
              name: oisp-config
        workingDir: /app
        readinessProbe:
          tcpSocket:
            port: 8080
        resources:
          {{ if .Values.less_resources }}
          requests:
            cpu: 50m
          {{ else }}
          limits:
            cpu: 500m
          requests:
            cpu: 500m
          {{ end }}
      {{ if .Values.jaeger_tracing }}
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:1.6.0
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
          protocol: TCP
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        command:
          - "/go/bin/agent-linux"
          - "--collector.host-port=jaeger-collector:14267"
      {{ end }}
      imagePullSecrets:
      - name: dockercred
