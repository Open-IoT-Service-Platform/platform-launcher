apiVersion: batch/v1
kind: Job
metadata:
  name: rule-engine
  labels:
    app: rule-engine
  annotations:
    "helm.sh/hook-weight": "60"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook": post-install, pre-upgrade
spec:
  backoffLimit: 10
  template:
    metadata:
      labels:
        app: rule-engine
    spec:
      restartPolicy: OnFailure
      containers:
      - name: rule-engine
        {{ if .Values.use_local_registry }}
        image: registry.local:5000/oisp/rule-engine:{{ .Values.tag }}
        {{ else }}
        image: oisp/rule-engine:{{ .Values.tag }}
        {{ end }}
        resources:
          {{ if .Values.less_resources }}
          requests:
            cpu: 50m
          {{ else }}
          limits:
            cpu: 500m
          requests:
            cpu: 500m
          {{ end }}
        env:
        - name: OISP_RULEENGINE_CONFIG
          valueFrom:
            configMapKeyRef:
              key: rule-engine
              name: oisp-config
        - name: OISP_HBASE_CONFIG
          valueFrom:
            configMapKeyRef:
              key: hbase
              name: oisp-config
        - name: OISP_HADOOP_PROPERTIES
          valueFrom:
            configMapKeyRef:
              key: hadoop
              name: oisp-config
        - name: OISP_ZOOKEEPER_CONFIG
          valueFrom:
            configMapKeyRef:
              key: zookeeper
              name: oisp-config
        - name: OISP_KAFKA_CONFIG
          valueFrom:
            configMapKeyRef:
              key: kafka
              name: oisp-config
        command: [ "/bin/sh", "-c" ]
        args: [ "sleep 10; python app.py rule-engine-bundled-0.1.jar"]
      imagePullSecrets:
      - name: dockercred
